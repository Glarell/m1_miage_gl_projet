CREATE TABLE Client
(
    id_client SERIAL
        CONSTRAINT PK_client PRIMARY KEY,
    nom       VARCHAR(50) NOT NULL,
    prenom    VARCHAR(50) NOT NULL,
    adresse   VARCHAR(50) NOT NULL,
    telephone NUMERIC(10) NOT NULL,
    email     VARCHAR(50) NOT NULL,
    mdp       VARCHAR(50) NOT NULL,
    carte     NUMERIC(16) NOT NULL,
    CONSTRAINT Unique_Client UNIQUE (email)
);

CREATE TABLE TypeNotification
(
    id_typeNotification VARCHAR(50)
        CONSTRAINT PK_typeNotification PRIMARY KEY
);

insert into TypeNotification (id_typeNotification)
values ('SMS');
insert into TypeNotification (id_typeNotification)
values ('Mail');

CREATE TABLE Notification
(
    id_notification     SERIAL
        CONSTRAINT PK_notification PRIMARY KEY,
    contenu             VARCHAR(300) NOT NULL,
    id_client           INTEGER      NOT NULL
        CONSTRAINT FK_id_client_notification REFERENCES Client (id_client),
    id_typeNotification VARCHAR      NOT NULL
        CONSTRAINT FK_id_typeNotification_notification REFERENCES TypeNotification (id_typeNotification)
);

CREATE TABLE Transaction
(
    id_transaction   SERIAL
        CONSTRAINT PK_transaction PRIMARY KEY,
    contenu          VARCHAR(300) NOT NULL,
    date_transaction DATE         NOT NULL DEFAULT CURRENT_DATE,
    id_client        INTEGER      NOT NULL
        CONSTRAINT FK_id_client_transaction REFERENCES Client (id_client)
);

CREATE TABLE Plaque
(
    id_plaque VARCHAR(50)
        CONSTRAINT PK_plaque PRIMARY KEY
);

CREATE TABLE EstAssocie
(
    id_estAssocie SERIAL
        CONSTRAINT PK_estAssocie PRIMARY KEY,
    isTemporaire  BOOLEAN NOT NULL DEFAULT FALSE,
    id_client     INTEGER NOT NULL
        CONSTRAINT FK_id_client_estAssocie REFERENCES Client (id_client),
    id_plaque     VARCHAR NOT NULL
        CONSTRAINT FK_id_plaque_estAssocie REFERENCES Plaque (id_plaque)
);

CREATE TABLE EtatBorne
(
    id_etatBorne VARCHAR(50)
        CONSTRAINT PK_etatBorne PRIMARY KEY
);

insert into EtatBorne (id_etatBorne)
values ('disponible');
insert into EtatBorne (id_etatBorne)
values ('indisponible');
insert into EtatBorne (id_etatBorne)
values ('réservée');
insert into EtatBorne (id_etatBorne)
values ('occupée');

CREATE TABLE Borne
(
    id_borne     SERIAL
        CONSTRAINT PK_borne PRIMARY KEY,
    id_etatBorne VARCHAR NOT NULL
        CONSTRAINT FK_id_etatBorne_borne REFERENCES EtatBorne (id_etatBorne)
);

CREATE TABLE Abonnement
(
    id_abonnement    SERIAL
        CONSTRAINT PK_abonnement PRIMARY KEY,
    date_abonnement  DATE    NOT NULL,
    debut_intervalle TIME    NOT NULL,
    fin_intervalle   TIME    NOT NULL,
    id_client        INTEGER NOT NULL
        CONSTRAINT FK_id_client_abonnement REFERENCES Client (id_client),
    id_borne         INTEGER NOT NULL
        CONSTRAINT FK_id_borne_abonnement REFERENCES Borne (id_borne)
);

CREATE TABLE Reservation
(
    id_reservation   SERIAL
        CONSTRAINT PK_reservation PRIMARY KEY,
    date_reservation DATE    NOT NULL,
    debut_intervalle TIME    NOT NULL,
    fin_intervalle   TIME    NOT NULL,
    nb_prolongement  INTEGER NOT NULL DEFAULT 0,
    isSupplement     BOOLEAN NOT NULL DEFAULT FALSE,
    id_estAssocie    INTEGER NOT NULL
        CONSTRAINT FK_id_estAssocie_reservation REFERENCES EstAssocie (id_estAssocie),
    id_borne         INTEGER NOT NULL
        CONSTRAINT FK_id_borne_reservation REFERENCES Borne (id_borne)
);